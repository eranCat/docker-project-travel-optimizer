"""Add path column to saved_paths

Revision ID: 43e8c8511938
Revises:
Create Date: 2025-04-12 13:56:41.659320

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "43e8c8511938"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("user_poi_association")
    op.drop_table("saved_path_entries")
    op.drop_index("ix_pois_id", table_name="pois")
    op.drop_index("ix_pois_name", table_name="pois")
    op.drop_table("pois")
    op.drop_index("ix_saved_paths_id", table_name="saved_paths")
    op.drop_table("saved_paths")
    op.drop_index("ix_users_email", table_name="users")
    op.drop_index("ix_users_id", table_name="users")
    op.drop_table("users")
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "users",
        sa.Column(
            "id",
            sa.INTEGER(),
            server_default=sa.text("nextval('users_id_seq'::regclass)"),
            autoincrement=True,
            nullable=False,
        ),
        sa.Column("name", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("email", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=True,
        ),
        sa.PrimaryKeyConstraint("id", name="users_pkey"),
        postgresql_ignore_search_path=False,
    )
    op.create_index("ix_users_id", "users", ["id"], unique=False)
    op.create_index("ix_users_email", "users", ["email"], unique=True)
    op.create_table(
        "saved_paths",
        sa.Column(
            "id",
            sa.INTEGER(),
            server_default=sa.text("nextval('saved_paths_id_seq'::regclass)"),
            autoincrement=True,
            nullable=False,
        ),
        sa.Column("name", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("description", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column("user_id", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.ForeignKeyConstraint(
            ["user_id"], ["users.id"], name="saved_paths_user_id_fkey"
        ),
        sa.PrimaryKeyConstraint("id", name="saved_paths_pkey"),
        postgresql_ignore_search_path=False,
    )
    op.create_index("ix_saved_paths_id", "saved_paths", ["id"], unique=False)
    op.create_table(
        "pois",
        sa.Column(
            "id",
            sa.INTEGER(),
            server_default=sa.text("nextval('pois_id_seq'::regclass)"),
            autoincrement=True,
            nullable=False,
        ),
        sa.Column("name", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("description", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column(
            "latitude",
            sa.DOUBLE_PRECISION(precision=53),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "longitude",
            sa.DOUBLE_PRECISION(precision=53),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=True,
        ),
        sa.PrimaryKeyConstraint("id", name="pois_pkey"),
        postgresql_ignore_search_path=False,
    )
    op.create_index("ix_pois_name", "pois", ["name"], unique=False)
    op.create_index("ix_pois_id", "pois", ["id"], unique=False)
    op.create_table(
        "saved_path_entries",
        sa.Column("saved_path_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("poi_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("order", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.ForeignKeyConstraint(
            ["poi_id"], ["pois.id"], name="saved_path_entries_poi_id_fkey"
        ),
        sa.ForeignKeyConstraint(
            ["saved_path_id"],
            ["saved_paths.id"],
            name="saved_path_entries_saved_path_id_fkey",
        ),
        sa.PrimaryKeyConstraint(
            "saved_path_id", "poi_id", name="saved_path_entries_pkey"
        ),
    )
    op.create_table(
        "user_poi_association",
        sa.Column("user_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("poi_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.ForeignKeyConstraint(
            ["poi_id"], ["pois.id"], name="user_poi_association_poi_id_fkey"
        ),
        sa.ForeignKeyConstraint(
            ["user_id"], ["users.id"], name="user_poi_association_user_id_fkey"
        ),
        sa.PrimaryKeyConstraint("user_id", "poi_id", name="user_poi_association_pkey"),
    )
    # ### end Alembic commands ###
